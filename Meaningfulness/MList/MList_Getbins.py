import scipy.io
import numpy as np
import copy
import numpy.ma as ma
from Meaningfulness.MList.MList_Excel import bin_edges

def get_bins():

    final_indexes = np.array([5, 6, 10, 12, 13, 24, 29, 33, 35, 38, 39, 46, 53, 55, 61, 63, 64, 66, 67, 68, 75, 82, 83, 84, 86,
                    88, 91, 94, 100, 104, 108, 109, 113, 119, 125, 127, 131, 133, 134, 136, 137, 139, 142, 143, 145,
                    157, 159, 162, 164, 166, 168, 169, 171, 172, 175, 177, 179, 183, 184, 187, 188, 194, 198, 199, 200,
                    203, 210, 211, 216, 223, 226, 230, 235, 240, 248, 249, 253, 254, 255, 258, 261, 265, 267, 278, 280,
                    283, 292, 295, 299, 304, 307, 308, 313, 315, 316, 323, 325, 327, 328, 336, 338, 339, 340, 341, 343,
                    346, 348, 353, 358, 360, 368, 371, 372, 373, 378, 383, 384, 386, 388, 389, 390, 392, 395, 397, 400,
                    401, 403, 405, 407, 408, 410, 413, 415, 417, 425, 427, 429, 431, 435, 437, 439, 441, 442, 446, 447,
                    466, 467, 476, 483, 484, 485, 488, 490, 492, 494, 495, 496, 497, 498, 499, 501, 508, 509, 512, 519,
                    520, 530, 541, 543, 546, 553, 559, 561, 565, 567, 569, 570, 573, 575, 576, 578, 579, 580, 584, 585,
                    590, 591, 592, 593, 598, 599, 600, 601, 602, 604, 605, 606, 610, 614, 618, 620, 622, 623, 624, 627,
                    628, 633, 635, 637, 639, 641, 642, 645, 654, 658, 659, 660, 661, 662, 666, 667, 670, 675, 682, 683,
                    684, 689, 691, 692, 696, 697, 699, 702, 706, 707, 708, 713, 714, 715, 718, 719, 723, 724, 726, 728,
                    731, 732, 733, 734, 737, 738, 745, 746, 749, 752, 754, 755, 760, 761, 763, 764, 766, 769, 771, 776,
                    778, 782, 783, 785, 790, 792, 793, 794, 795, 796, 798, 800, 801, 804, 807, 809, 812, 814, 820, 821,
                    827, 829, 833, 834, 839, 840, 843, 846, 847, 848, 849, 852, 857, 858, 861, 866, 869, 870, 871, 872,
                    873, 874, 876, 878, 879, 883, 885, 888, 893, 895, 900, 901, 908, 912, 916, 919, 922, 929, 932, 935,
                    937, 940, 947, 953, 955, 959, 960, 963, 972, 974, 976, 977, 980, 982, 987, 988, 989, 994, 995, 996,
                    997, 999, 1000, 1002, 1006, 1009, 1011, 1013, 1015, 1016, 1017, 1019, 1021, 1022, 1024, 1027, 1031,
                    1032, 1035, 1036, 1037, 1044, 1047, 1048, 1049, 1051, 1057, 1060, 1061, 1065, 1066, 1070, 1071,
                    1075, 1076, 1079, 1080, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1095, 1096, 1098, 1104, 1108,
                    1111, 1112, 1113, 1117, 1119, 1123, 1124, 1125, 1132, 1139, 1140, 1143, 1144, 1147, 1148, 1149,
                    1152, 1155, 1158, 1159, 1170, 1171, 1172, 1173, 1176, 1183, 1184, 1192, 1194, 1197, 1199, 1200,
                    1202, 1203, 1209, 1215, 1219, 1221, 1224, 1227, 1229, 1232, 1238, 1242, 1243, 1245, 1246, 1250,
                    1251, 1256, 1258, 1260, 1261, 1262, 1271, 1272, 1275, 1280, 1282, 1284, 1287, 1292, 1293, 1294,
                    1295, 1299, 1301, 1303, 1307, 1312, 1315, 1317, 1319, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
                    1333, 1341, 1343, 1345, 1347, 1349, 1351, 1355, 1356, 1357, 1358, 1368, 1369, 1370, 1371, 1373,
                    1374, 1382, 1384, 1385, 1388, 1392, 1395, 1400, 1403, 1405, 1407, 1408, 1411, 1414, 1415, 1416,
                    1420, 1422, 1423, 1426, 1427, 1436, 1438, 1440, 1448, 1451, 1456, 1460, 1461, 1468, 1472, 1478,
                    1486, 1488, 1493, 1496, 1501, 1503, 1505, 1508, 1511, 1512, 1515, 1519, 1520, 1521, 1522, 1524,
                    1526, 1527, 1530, 1532, 1533, 1535, 1536, 1544, 1545, 1546, 1555, 1557, 1562, 1565, 1572, 1578,
                    1580, 1581, 1587, 1592, 1593, 1605, 1606, 1608, 1609, 1611, 1618, 1620, 1621, 1622, 1625, 1626,
                    1628, 1629, 1631, 1633, 1635, 1636])

    concreteness = np.array([4.57, 4.54, 3.61, 4.96, 4.87, 4.81, 4.86, 5, 4.87, 4.96, 4.7, np.nan, 4.79, 3.34, 4.26, 4.14, 5,
                    4.19, 4.9, 4.93, 4.92, 4.9, 4.78, 4.43, 4, 4.59, 4.86, 4.89, 4.92, 4.72, 4.63, 4.68, 4.74, 4.8, 5,
                    4.89, 4.68, 4.72, 4.93, 5, 4.25, 4.96, 4.77, 4.57, 4.79, 4.74, 4.9, 4.59, 5, 4.44, 4.9, 4.81, 4.89,
                    4.83, 4.86, 4.43, 4.43, 4.6, 4.96, 5, 4.18, 4.83, 4.97, 4.04, 4.44, 4.65, 4.75, 4.92, 4.96, 4.93,
                    4.68, 4.83, 4.81, 3.03, 4.86, 5, 4.92, 4.89, 4.86, 4.44, 4.64, 4.85, 4.68, 4.82, 4.6, 4.43, 4.24,
                    4.93, 4.78, 4.97, 4.9, 4.93, 4.21, 4.89, 4.53, 4.5, 5, 4.76, 4.54, 5, 4.4, 4.83, 4.61, 4.81, 4.89,
                    4.62, 3.89, 4.67, 4.66, 4.35, 4.15, 4.11, 4.32, 4.9, 4.4, 4.57, 4.85, 4.71, 4.17, 4.04, 3.82, 3.7,
                    4.72, 4.9, 4.61, 4.87, 4.07, 4.43, 4.86, 4.77, 3.55, 4.44, 4.81, 4.5, 4.79, 4.82, 4.85, 4.48, 5,
                    4.75, 4.79, 4.61, 4.79, 4.77, 4.93, 4.85, 4.82, 4.69, 4.96, 5, 3.54, 4.41, 4.96, 4.39, 4.6, 4.93,
                    4.96, 4.4, 4.76, 4.71, 4.48, 4.4, 5, 5, np.nan, 5, 3, np.nan, 2.85, 5, 4.54, 4.57, 4.81, 4.71, 5,
                    4.8, 4.68, 4.79, 5, 4.79, 3.81, 4.59, 4.26, 5, 5, 4.9, 4.73, 4.9, 4.76, 4.97, 4.03, 4.3, np.nan,
                    4.56, 4.87, 3.88, 3.07, 4.81, 4.59, 3.92, 3.93, 4.69, 4.73, 4.89, 4.88, 4.72, 3.82, 4.56, 4.85,
                    4.82, 4.59, 4.97, 4.38, 5, 4.56, 5, 4.61, 4.86, 3.17, 4.77, 4.04, 4.9, 4.85, 4.21, 4.72, 4.93, 4.85,
                    4.93, 4.93, 5, 4.52, 4.54, 4.92, 3.07, 4.72, 4.53, 4.88, 4.88, 4.79, 4.96, 5, 4.12, 4.48, 4.93,
                    4.11, 4.96, 4.66, 3.63, 4.73, 4.93, 4.19, 4.96, 4.41, 4.82, 5, np.nan, 4.93, 4.63, 3.75, 4.5, 4.66,
                    4.64, 3, 5, 4.96, 4.97, 4.92, 4.9, 4.9, 4.46, 4.85, 5, 4.33, 4.5, 4.88, 4.97, 4.56, 4.5, 4.82, 3.89,
                    4.83, 5, 4.97, 4.59, 4.69, 4.96, 4.9, 4.68, 4.68, 4, 4.32, np.nan, 3.68, 4.83, 4.56, 4.31, 4.25, 5,
                    4.57, 4.59, 4.46, 4.25, 4.62, 4.7, 4.48, 4.48, 4.85, 4.96, 4.14, 5, 4.9, 4.89, 3.97, 4.57, 4.92,
                    4.83, 3.15, 4.54, 3.72, 4.97, 4.93, 4.84, 4.78, 4.72, 4.93, 4.93, 4.96, 2.69, 4.9, 4.1, 4.92, 4.21,
                    4.39, 4.93, 4.5, 4.93, 4.86, 4.66, 4.92, 4.61, 4.12, 3.61, 4.86, 4.85, 3.5, 4.72, 4.52, 4.8, 4.93,
                    4.57, 4.93, 4.93, 4.56, 5, 4.77, 3.53, 3.8, 4.86, 4.97, 2.5, 3.86, 4.9, 4.89, 4.86, 4.87, 4.44, 5,
                    4.59, 4.1, 4.66, 3.43, 4.9, 4.83, 4.52, 4.71, 4.4, 4.67, 4.77, 4.89, 4.81, 5, 4.23, 4.59, 4.77,
                    4.77, 4.44, 4.93, np.nan, 4.68, 4.36, 4.27, 4.79, 5, 4.79, 4.9, 4.73, 4.37, 4.76, 4.7, 4.5, 4.44,
                    4.72, 3, 4.9, 4.67, 4.55, 4.78, 4.65, 4.43, 4.45, 4.93, 4.26, 4.87, 5, 4.07, 4.9, 3.07, 4.86, 4.15,
                    3.3, 3.92, 4.85, 4.89, 4.31, 4.61, 4.65, 4.73, 4.43, 4.75, 4.79, 4.52, 4.85, 4.97, 4.81, 4.89, 4.9,
                    4.88, 4.61, 4.86, 4.68, 4.97, 4.85, 4.55, 4.1, 4.79, 4.83, 5, 4.63, 4.64, 4.55, 4.93, 4.96, 4.64,
                    4.5, 4.94, 4.41, 4.82, 4.93, 4.97, 4.92, 4.37, 4.96, 4.7, 4, 4.56, 4.73, 4.82, 4.48, 4.48, 4.07,
                    4.64, 4.14, 4.36, 4.93, 5, 4.97, 4.89, 3.54, 4.85, 4.83, 4.97, 5, 4.62, 4.96, 3.85, 4.21, 4.72, 4.7,
                    4.34, 4.69, 4.93, 4.67, 4.89, 4.72, 4.96, 4.5, 4.92, 4.86, 4.97, 4.21, 4.69, 4.54, 4.63, 4.08, 2.59,
                    4.96, 4.77, 4.07, 4.93, 4.9, 4.82, 3.27, 4.93, 4.52, 4.53, 4.7, 4.37, 4.83, 4.64, 4.68, 4.9, 4.71,
                    4.87, 4.59, 5, 3.77, 3.79, 4.46, 4.14, 4.9, 4.72, 4.84, 4.86, 4.82, 4.89, 4.79, 5, 4.68, 4.96, 4.75,
                    4.44, 4.41, 4.69, 4.27, 4.24, 3.46, 4.72, 4.83, 4.44, 4.54, 3.59, np.nan, 3.48, 4.89, 4.67, 4.56,
                    4.67, 4.7, 4.96, 4.89, 4.42, 4.33, 4.13, 4.86, 4.07, 4.46, 4.59, 4.36, 4.93, 4.93, 3.96, 4.97, 4.93,
                    4.78, 4.86, 4.83])

    mlist = [0.126722957524 ,
    0.12388056235 ,
    0.121806274268 ,
    0.128345455075 ,
    0.124862508503 ,
    0.125484200618 ,
    0.127126556544 ,
    0.130814782736 ,
    0.129642419996 ,
    0.125229932868 ,
    0.123323160722 ,
    0.120458102989 ,
    0.122819372795 ,
    0.123229497744 ,
    0.120330069062 ,
    0.119382657821 ,
    0.128925273696 ,
    0.121243728561 ,
    0.128574031959 ,
    0.123219036727 ,
    0.126138437391 ,
    0.127348187813 ,
    0.125090586747 ,
    0.122958771358 ,
    0.125355274069 ,
    0.126654646682 ,
    0.125058846813 ,
    0.127170554636 ,
    0.13142968079 ,
    0.126290847118 ,
    0.12882418292 ,
    0.130583399077 ,
    0.125475659332 ,
    0.129985584906 ,
    0.127880766959 ,
    0.124442385909 ,
    0.127253337486 ,
    0.125022745397 ,
    0.13009262181 ,
    0.127267287381 ,
    0.119477423602 ,
    0.128690943021 ,
    0.121029079747 ,
    0.122526179463 ,
    0.12581692205 ,
    0.126189548834 ,
    0.124403366836 ,
    0.127037349212 ,
    0.124298638279 ,
    0.121577450821 ,
    0.121727168178 ,
    0.128321602109 ,
    0.126244399883 ,
    0.125342713302 ,
    0.125667690784 ,
    0.124710086449 ,
    0.126403353031 ,
    0.122612360158 ,
    0.127964839556 ,
    0.127062404863 ,
    0.125543956447 ,
    0.127457365624 ,
    0.130266593548 ,
    0.122011611909 ,
    0.127225380465 ,
    0.127118656505 ,
    0.13104514806 ,
    0.127043914347 ,
    0.128937225208 ,
    0.125993090575 ,
    0.125807637893 ,
    0.126090445731 ,
    0.125213268596 ,
    0.119905507473 ,
    0.126617067571 ,
    0.128644000336 ,
    0.12682841887 ,
    0.1257799729 ,
    0.126890681715 ,
    0.125502725521 ,
    0.128453875666 ,
    0.127985852955 ,
    0.125188061119 ,
    0.124801647426 ,
    0.126514649123 ,
    0.125564229345 ,
    0.121497667651 ,
    0.12894244217 ,
    0.128905555901 ,
    0.128964697178 ,
    0.125841846789 ,
    0.129965395988 ,
    0.128916529392 ,
    0.128135140999 ,
    0.124198704815 ,
    0.125288798752 ,
    0.123012872488 ,
    0.127346498625 ,
    0.122268013891 ,
    0.131804607293 ,
    0.125628732186 ,
    0.125874268985 ,
    0.126199929635 ,
    0.126446903429 ,
    0.125558826825 ,
    0.120590296991 ,
    0.124377246686 ,
    0.126134264355 ,
    0.125729897814 ,
    0.122774311274 ,
    0.120848080324 ,
    0.123477311746 ,
    0.128664956954 ,
    0.128452484442 ,
    0.127864442373 ,
    0.128843429007 ,
    0.127201396416 ,
    0.12879068585 ,
    0.121155274125 ,
    0.122196675546 ,
    0.119493583333 ,
    0.12752000153 ,
    0.125947973596 ,
    0.131226878465 ,
    0.124459725072 ,
    0.128489854945 ,
    0.13112747483 ,
    0.127275675298 ,
    0.130123354554 ,
    0.124874913445 ,
    0.121048601464 ,
    0.119978439269 ,
    0.123654232492 ,
    0.126545159933 ,
    0.127412862399 ,
    0.124750008853 ,
    0.130046058409 ,
    0.120607155615 ,
    0.129490338733 ,
    0.126897694908 ,
    0.127503033679 ,
    0.126282396939 ,
    0.128217428796 ,
    0.124901697921 ,
    0.125871648522 ,
    0.125194422137 ,
    0.127901975368 ,
    0.12514017208 ,
    0.12795568756 ,
    0.128408154884 ,
    0.121962521793 ,
    0.125116187904 ,
    0.127905227445 ,
    0.128171744797 ,
    0.118438776778 ,
    0.128831860089 ,
    0.128815289524 ,
    0.123340666341 ,
    0.128670503824 ,
    0.123301156686 ,
    0.120131188895 ,
    0.126965303408 ,
    0.126692922634 ,
    0.128984109615 ,
    0.124588442808 ,
    0.12574981799 ,
    0.121997824322 ,
    0.11985163051 ,
    0.120581532714 ,
    0.12404602209 ,
    0.12717407879 ,
    0.1260141869 ,
    0.122856760027 ,
    0.124644501586 ,
    0.126041191807 ,
    0.129110142509 ,
    0.127865359064 ,
    0.124029874745 ,
    0.127594698139 ,
    0.128527331139 ,
    0.119476280574 ,
    0.1304602273 ,
    0.128075132488 ,
    0.132423247267 ,
    0.127815749334 ,
    0.124968964695 ,
    0.122432439736 ,
    0.130526447319 ,
    0.12519469254 ,
    0.128922218011 ,
    0.12408627082 ,
    0.122869692752 ,
    0.118450531717 ,
    0.130666479243 ,
    0.128889464947 ,
    0.125865103189 ,
    0.127364718018 ,
    0.12952450793 ,
    0.128191486813 ,
    0.12764563418 ,
    0.127641515543 ,
    0.125211090635 ,
    0.13000000058 ,
    0.1309194763 ,
    0.124363986692 ,
    0.126680574455 ,
    0.124754150478 ,
    0.12560832459 ,
    0.129833660074 ,
    0.128603333647 ,
    0.119483638057 ,
    0.128078432047 ,
    0.127223886905 ,
    0.128159141629 ,
    0.125522151693 ,
    0.124763242973 ,
    0.126439719852 ,
    0.130236793428 ,
    0.125767875502 ,
    0.124589601279 ,
    0.123994192579 ,
    0.128128412725 ,
    0.125009983994 ,
    0.120605089452 ,
    0.125832181861 ,
    0.129993035497 ,
    0.127211176896 ,
    0.124595471369 ,
    0.125058141957 ,
    0.129185104529 ,
    0.125611469931 ,
    0.124050471606 ,
    0.128605097446 ,
    0.124161078623 ,
    0.122633107544 ,
    0.125045670203 ,
    0.129993125581 ,
    0.128154344602 ,
    0.124978942505 ,
    0.128686632713 ,
    0.129692806794 ,
    0.124940814515 ,
    0.125537210062 ,
    0.123275855565 ,
    0.129578092046 ,
    0.122199709095 ,
    0.124085223764 ,
    0.124784882764 ,
    0.126348190987 ,
    0.130087450603 ,
    0.123793396873 ,
    0.124365814188 ,
    0.126183768482 ,
    0.120692410521 ,
    0.128898331933 ,
    0.130893536189 ,
    0.130294124099 ,
    0.12309698271 ,
    0.124546450571 ,
    0.126605876487 ,
    0.128399357563 ,
    0.123410788474 ,
    0.125064672896 ,
    0.125057686757 ,
    0.125704674306 ,
    0.132260244285 ,
    0.129585433098 ,
    0.128066481182 ,
    0.130406321753 ,
    0.123063986768 ,
    0.127791508694 ,
    0.123516310721 ,
    0.128837710572 ,
    0.127895481551 ,
    0.126650425449 ,
    0.12776670055 ,
    0.126343195362 ,
    0.122306393444 ,
    0.126842873346 ,
    0.120161654383 ,
    0.125339228335 ,
    0.128560891147 ,
    0.129691729292 ,
    0.123631426234 ,
    0.127881561696 ,
    0.125601750827 ,
    0.128511188071 ,
    0.128171578815 ,
    0.131865750975 ,
    0.126835219715 ,
    0.127034208689 ,
    0.120216104598 ,
    0.127484240632 ,
    0.127341758447 ,
    0.124260323968 ,
    0.123947611815 ,
    0.125177580128 ,
    0.125198191612 ,
    0.126907392901 ,
    0.127807391873 ,
    0.126775887216 ,
    0.121944716864 ,
    0.12492431575 ,
    0.119111010764 ,
    0.123811298587 ,
    0.12107118614 ,
    0.125018628673 ,
    0.130226998609 ,
    0.121332926228 ,
    0.128786326133 ,
    0.128966810797 ,
    0.122317052516 ,
    0.120849236149 ,
    0.127654043541 ,
    0.127992658249 ,
    0.126245877795 ,
    0.127850830937 ,
    0.121292903379 ,
    0.129400578766 ,
    0.123943546624 ,
    0.12682181108 ,
    0.12549323866 ,
    0.133339642619 ,
    0.129980350198 ,
    0.126098833768 ,
    0.127433624353 ,
    0.127069726321 ,
    0.121091607333 ,
    0.132907668956 ,
    0.1250852354 ,
    0.122571280432 ,
    0.12071423311 ,
    0.125752679534 ,
    0.122993623876 ,
    0.127433667386 ,
    0.129566834227 ,
    0.130449178681 ,
    0.129367280142 ,
    0.129386239593 ,
    0.12490712401 ,
    0.1236870649 ,
    0.121988735402 ,
    0.127301550796 ,
    0.129116399404 ,
    0.122469068381 ,
    0.121365059393 ,
    0.125667744251 ,
    0.127755560776 ,
    0.129885451369 ,
    0.127084410057 ,
    0.128990417177 ,
    0.124845730058 ,
    0.124272598447 ,
    0.127261922001 ,
    0.131253554029 ,
    0.119567088043 ,
    0.117654307956 ,
    0.12828478419 ,
    0.131107796894 ,
    0.122636964467 ,
    0.120306240478 ,
    0.130509060361 ,
    0.126411718524 ,
    0.129907506414 ,
    0.127786076785 ,
    0.124968800222 ,
    0.130238072226 ,
    0.126706736811 ,
    0.125788013336 ,
    0.126529729936 ,
    0.12200493952 ,
    0.127137148934 ,
    0.126714858103 ,
    0.125059085278 ,
    0.129540839208 ,
    0.125457325659 ,
    0.121141574899 ,
    0.130433641346 ,
    0.127579221312 ,
    0.1248137877 ,
    0.131268468241 ,
    0.128347722703 ,
    0.127619981879 ,
    0.127166582075 ,
    0.122768698336 ,
    0.122912305929 ,
    0.127162888691 ,
    0.119815209636 ,
    0.12813610292 ,
    0.12313338618 ,
    0.127337385263 ,
    0.122853607244 ,
    0.129314396256 ,
    0.128046307228 ,
    0.124956251097 ,
    0.129713944519 ,
    0.121239205623 ,
    0.126864053624 ,
    0.124608519193 ,
    0.126361114526 ,
    0.126357035857 ,
    0.127644940829 ,
    0.121793276177 ,
    0.130459428836 ,
    0.129869142165 ,
    0.122660857544 ,
    0.132171026706 ,
    0.130834725078 ,
    0.118158552824 ,
    0.127513295644 ,
    0.132784187227 ,
    0.124917917934 ,
    0.131940523271 ,
    0.1223863272 ,
    0.12573147264 ,
    0.127818454571 ,
    0.124470007466 ,
    0.121222305164 ,
    0.119185882921 ,
    0.123064453376 ,
    0.118908689624 ,
    0.127503939751 ,
    0.125954763614 ,
    0.127571820192 ,
    0.128806566408 ,
    0.128663157157 ,
    0.121863186368 ,
    0.128406053143 ,
    0.130540173066 ,
    0.126089369306 ,
    0.125155389819 ,
    0.125204500769 ,
    0.131431733843 ,
    0.129728583491 ,
    0.126291496732 ,
    0.129576293993 ,
    0.130756498575 ,
    0.12844685621 ,
    0.127065044918 ,
    0.129012207508 ,
    0.130319149614 ,
    0.127542304481 ,
    0.126987357431 ,
    0.124768493047 ,
    0.129030335128 ,
    0.126549875105 ,
    0.128650180952 ,
    0.123160966715 ,
    0.124557257932 ,
    0.125995860881 ,
    0.124908790029 ,
    0.123766109313 ,
    0.121814976211 ,
    0.122977205322 ,
    0.12815948665 ,
    0.130986240868 ,
    0.125163996542 ,
    0.12466434992 ,
    0.126561964979 ,
    0.128615752414 ,
    0.12571122956 ,
    0.125509038986 ,
    0.127755526774 ,
    0.126786819125 ,
    0.124647296634 ,
    0.128241122804 ,
    0.12758759178 ,
    0.12200491085 ,
    0.12652638393 ,
    0.127215888682 ,
    0.126216850448 ,
    0.12345901357 ,
    0.12744554268 ,
    0.130671818418 ,
    0.13193230175 ,
    0.127136375524 ,
    0.12490994008 ,
    0.120334340395 ,
    0.127815200175 ,
    0.128760662054 ,
    0.129483116821 ,
    0.128532996507 ,
    0.127051094417 ,
    0.132660341332 ,
    0.126652477464 ,
    0.119731642845 ,
    0.12334059263 ,
    0.123922799405 ,
    0.121804891118 ,
    0.120514600615 ,
    0.127610030329 ,
    0.126841240534 ,
    0.127785912649 ,
    0.130760427421 ,
    0.130569377639 ,
    0.121711464843 ,
    0.123946459753 ,
    0.123873785369 ,
    0.128429043832 ,
    0.120161972093 ,
    0.124614494152 ,
    0.125444645728 ,
    0.127350905076 ,
    0.120133393615 ,
    0.123591208218 ,
    0.128237416845 ,
    0.124350701311 ,
    0.121175760174 ,
    0.13094099873 ,
    0.12414887847 ,
    0.124220351648 ,
    0.128348401577 ,
    0.124071179744 ,
    0.124389913276 ,
    0.126733076521 ,
    0.126301038467 ,
    0.12782300188 ,
    0.124876550475 ,
    0.125046420097 ,
    0.127248989762 ,
    0.130015297856 ,
    0.127609363978 ,
    0.127538095513 ,
    0.124805852667 ,
    0.128465450599 ,
    0.124720411638 ,
    0.124673748307 ,
    0.126865493299 ,
    0.125391530405 ,
    0.123740056089 ,
    0.129091259953 ,
    0.129365134352 ,
    0.125639420839 ,
    0.12557465227 ,
    0.131683364498 ,
    0.128543469982 ,
    0.132371244465 ,
    0.129087141643 ,
    0.128004682546 ,
    0.129361947037 ,
    0.125873911123 ,
    0.124719724779 ,
    0.123975030401 ,
    0.122603973434 ,
    0.12576681163 ,
    0.129077179508 ,
    0.123349126682 ,
    0.125928911081 ,
    0.129415221816 ,
    0.123120893362 ,
    0.125678444854 ,
    0.126277015981 ,
    0.124939462792 ,
    0.127579358117 ,
    0.126599169741 ,
    0.129918778946 ,
    0.127666273943 ,
    0.128020639186 ,
    0.129976090607 ,
    0.129492948066 ,
    0.12542010709 ,
    0.128909286198 ,
    0.124848215174 ,
    0.124944131928 ,
    0.123022259564 ,
    0.130724596817 ,
    0.124757456502 ,
    0.120824696392 ,
    0.127201762315 ,
    0.126006361988 ,
    0.125382560367 ,
    0.122381015216 ,
    0.125486648915 ,
    0.128340450505 ,
    0.127477917729 ,
    0.128082316963]
    mlist = np.array(mlist)

    final_indexes_masked = final_indexes[np.logical_not(np.isnan(concreteness))]
    final_mlist = mlist[np.logical_not(np.isnan(concreteness))]
    print("Final mlist", len(final_mlist))
    bins = bin(final_mlist)
    print(bins)

    '''   final_indexes_masked = final_indexes[np.logical_not(np.isnan(concreteness))]

    # Given the final index, finding the word freq and the appropriate bin #
    # final_conc = pool_freq(word_freq, final_indexes_masked)
    final_conc = concreteness[np.logical_not(np.isnan(concreteness))]
    bins = bin(final_conc)
    print(bins)
'''
    # Creating a word dictionary with the final indices of words and their corresponding word frequency values
    word_dict = {}
    print(final_indexes_masked)
    for i in range(len(final_indexes_masked)):
        print(final_indexes_masked[i], bins[i])
        word_dict[final_indexes_masked[i]] = bins[i]
    return word_dict

def bin(final_meaningfulness):
    bins = []

    # Finding the bin number that corresponds to word's frequency value. For example, a word with a freq value of 50 would be in bin 2


    for i in range(len(final_meaningfulness)):
        if final_meaningfulness[i] >= 0 and final_meaningfulness[i] <= bin_edges[0]:
            bins.append(0)
        elif final_meaningfulness[i] > bin_edges[0] and final_meaningfulness[i] <= bin_edges[1]:
            bins.append(1)
        elif final_meaningfulness[i] >  bin_edges[1] and final_meaningfulness[i] <= bin_edges[2]:
            bins.append(2)
        elif final_meaningfulness[i] > bin_edges[2] and final_meaningfulness[i] <= bin_edges[3]:
            bins.append(3)
        elif final_meaningfulness[i] >bin_edges[3] and final_meaningfulness[i] <= bin_edges[4]:
            bins.append(4)
        elif final_meaningfulness[i] > bin_edges[4] and final_meaningfulness[i] <= bin_edges[5]:
            bins.append(5)
        elif final_meaningfulness[i] > bin_edges[5] and final_meaningfulness[i] <=  bin_edges[6]:
            bins.append(6)
        elif final_meaningfulness[i] > bin_edges[6] and final_meaningfulness[i] <= bin_edges[7]:
            bins.append(7)
        elif final_meaningfulness[i] > bin_edges[7] and final_meaningfulness[i] <=  bin_edges[8]:
            bins.append(8)
        elif final_meaningfulness[i] >  bin_edges[8]and final_meaningfulness[i] <= bin_edges[9]:
            bins.append(9)
        elif final_meaningfulness[i] > bin_edges[9] and final_meaningfulness[i] <= bin_edges[10] :
            bins.append(10)
        elif final_meaningfulness[i] > bin_edges[10] and final_meaningfulness[i] <= bin_edges[11] :
            bins.append(11)
        elif final_meaningfulness[i] > bin_edges[11] and final_meaningfulness[i] <= bin_edges[12]:
            bins.append(12)
        elif final_meaningfulness[i] > bin_edges[12] and final_meaningfulness[i] <= bin_edges[13]:
            bins.append(13)
        elif final_meaningfulness[i] > bin_edges[13] and final_meaningfulness[i] <= bin_edges[14]:
            bins.append(14)
        elif final_meaningfulness[i] > bin_edges[14] and final_meaningfulness[i] <= bin_edges[15] :
            bins.append(15)
        elif final_meaningfulness[i] > bin_edges[15] and final_meaningfulness[i] <= bin_edges[16] :
            bins.append(16)
        elif final_meaningfulness[i] > bin_edges[16] and final_meaningfulness[i] <= bin_edges[17] :
            bins.append(17)
        elif final_meaningfulness[i] > bin_edges[17] and final_meaningfulness[i] <= bin_edges[18] :
            bins.append(18)
        elif final_meaningfulness[i] > bin_edges[18]  :
            bins.append(19)
    print(bins)
    print(len(bins))
    return(bins)


if __name__ == "__main__":
    get_bins()

